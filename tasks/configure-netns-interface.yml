---

- name: Generate internal interface name if required
  ansible.builtin.set_fact:
    gen_devname_inside: veth{{ veth_count }}
  when:
    - item.type != 'raw'
    - item.devname_inside is not defined

- name: Generate external interface name if required
  ansible.builtin.set_fact:
    gen_devname_outside: "{{ 'veth' + veth_count + '-' + netns_item.name }}"
  when:
    - item.type != 'raw'
    - item.devname_outside is not defined

- name: Check internal interface name is a valid length
  ansible.builtin.assert:
    that:
      - item.devname_inside | default(gen_devname_inside) | length >= 1
      - item.devname_inside | default(gen_devname_inside) | length <= 15
    fail_msg: "interface name '{{ item.devname_inside | default(gen_devname_inside) }}'"
  when: "item.type != 'raw'"

- name: Check external interface name is a valid length
  ansible.builtin.assert:
    that:
      - item.devname_outside | default(gen_devname_outside) | length >= 1
      - item.devname_outside | default(gen_devname_outside) | length <= 15
    fail_msg: "interface name '{{ item.devname_outside | default(gen_devname_outside) }}'"
  when: "item.type != 'raw'"

- name: Configure netns interface
  ansible.builtin.template:
    src: netns_default
    dest: "/etc/default/netns-{{ netns_item.name }}/{{ item.type }}.{{ item.interface | default(veth_count) }}"
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: Enable netns systemd unit
  ansible.builtin.systemd:
    name: "netns-{{ item.type }}@{{ netns_item.name }}.service"
    enabled: yes
    masked: no

# increment counter so next interface in this namespace gets a unique name
- name: Increment virtual interface count
  ansible.builtin.set_fact:
    veth_count: "{{ veth_count | int + 1 }}"
  when: "item.type == 'bridge' or item.type == 'veth'"
